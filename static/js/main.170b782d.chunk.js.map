{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["ECLASS_STATUS_TEXT","none","minor","major","critical","ECLASS_STATUS_COLOR","App","useState","loading","setLoading","status","indicator","description","page","url","updated_at","data","setData","handleWindowSizeChange","vh","window","innerHeight","document","documentElement","style","setProperty","useEffect","addEventListener","removeEventListener","axios","get","then","res","Box","width","height","background","animation","type","duration","justify","align","Text","color","weight","size","href","textDecoration","position","bottom","textAlign","moment","format","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","Grommet","getElementById"],"mappings":"sSAMMA,EAAqB,CACzBC,KAAM,gBACNC,MAAO,6BACPC,MAAO,oBACPC,SAAU,qBAGNC,EAAsB,CAC1BJ,KAAM,YACNC,MAAO,iBACPC,MAAO,gBAwEMG,EArEH,WAAO,IAAD,EACcC,oBAAS,GADvB,mBACTC,EADS,KACAC,EADA,OAEQF,mBAAS,CAC/BG,OAAQ,CAAEC,UAAW,GAAIC,YAAa,IACtCC,KAAM,CAAEC,IAAK,GAAIC,WAAY,MAJf,mBAETC,EAFS,KAEHC,EAFG,KAMVC,EAAyB,WAC7B,IAAIC,EAA0B,IAArBC,OAAOC,YAChBC,SAASC,gBAAgBC,MAAMC,YAAY,OAA3C,UAAsDN,EAAtD,QAmBF,OAhBAO,qBAAU,WAGR,OAFAR,IACAE,OAAOO,iBAAiB,SAAUT,GAC3B,kBAAME,OAAOQ,oBAAoB,SAAUV,OAGpDQ,qBAAU,WACRjB,GAAW,GACXoB,IACGC,IAAI,wDACJC,MAAK,SAAAC,GACJf,EAAQe,EAAIhB,MACZP,GAAW,QAEd,IAEID,EACL,cAACyB,EAAA,EAAD,CACEC,MAAO,QACPC,OAAQ,6BACRC,WAAY,UAGd,eAACH,EAAA,EAAD,CACEC,MAAO,QACPC,OAAQ,6BACRC,WAAY/B,EAAoBW,EAAKN,OAAOC,WAC5C0B,UAAW,CAAEC,KAAM,SAAUC,SAAU,KACvCC,QAAS,SACTC,MAAO,SANT,UAOE,cAACC,EAAA,EAAD,CAAMC,MAAO,QAASC,OAAQ,IAAKC,KAAM,MAAzC,SACE,mBACEC,KAAM9B,EAAKH,KAAKC,IAChBU,MAAO,CAAEuB,eAAgB,OAAQJ,MAAO,SAF1C,SAGG3C,EAAmBgB,EAAKN,OAAOC,eAGpC,eAAC+B,EAAA,EAAD,CACEC,MAAO,QACPC,OAAQ,IACRC,KAAM,MACNrB,MAAO,CAAEwB,SAAU,QAASC,OAAQ,SACpCC,UAAW,SALb,6BAMmB,IAChBC,IAAOnC,EAAKH,KAAKE,YAAYqC,OAAO,yBACrC,uBARF,aASY,6CATZ,gDAUE,uBACA,mBACEN,KAAM,6CACNtB,MAAO,CAAEuB,eAAgB,OAAQJ,MAAO,SAF1C,4CClEOU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,UACE,cAAC,EAAD,QAGJ1C,SAAS2C,eAAe,SAM1BZ,M","file":"static/js/main.170b782d.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Box, Text } from 'grommet';\nimport './App.css';\n\nconst ECLASS_STATUS_TEXT = {\n  none: 'eClass is up!',\n  minor: 'eClass is having issues :/',\n  major: 'eClass is down :(',\n  critical: 'eClass is down :(',\n};\n\nconst ECLASS_STATUS_COLOR = {\n  none: 'status-ok',\n  minor: 'status-warning',\n  major: 'status-error',\n};\n\nconst App = () => {\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState({\n    status: { indicator: '', description: '' },\n    page: { url: '', updated_at: '' },\n  });\n  const handleWindowSizeChange = () => {\n    let vh = window.innerHeight * 0.01;\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\n  };\n\n  useEffect(() => {\n    handleWindowSizeChange();\n    window.addEventListener('resize', handleWindowSizeChange);\n    return () => window.removeEventListener('resize', handleWindowSizeChange);\n  });\n\n  useEffect(() => {\n    setLoading(true);\n    axios\n      .get('https://status.eclass.ualberta.ca/api/v2/status.json')\n      .then(res => {\n        setData(res.data);\n        setLoading(false);\n      });\n  }, []);\n\n  return loading ? (\n    <Box\n      width={'100vw'}\n      height={'calc(var(--vh, 1vh) * 100)'}\n      background={'black'}\n    />\n  ) : (\n    <Box\n      width={'100vw'}\n      height={'calc(var(--vh, 1vh) * 100)'}\n      background={ECLASS_STATUS_COLOR[data.status.indicator]}\n      animation={{ type: 'fadeIn', duration: 2000 }}\n      justify={'center'}\n      align={'center'}>\n      <Text color={'white'} weight={900} size={'8vw'}>\n        <a\n          href={data.page.url}\n          style={{ textDecoration: 'none', color: 'white' }}>\n          {ECLASS_STATUS_TEXT[data.status.indicator]}\n        </a>\n      </Text>\n      <Text\n        color={'white'}\n        weight={300}\n        size={'1vw'}\n        style={{ position: 'fixed', bottom: '0.5em' }}\n        textAlign={'center'}>\n        Last Updated At:{' '}\n        {moment(data.page.updated_at).format('yyyy-MM-DD hh:mm:ss A')}\n        <br />\n        Made with <s>❤️</s> ☕️ and some hatred towards eClass.\n        <br />\n        <a\n          href={'https://git.adrianleung.dev/is-eclass-down'}\n          style={{ textDecoration: 'none', color: 'white' }}>\n          Powered by GitHub Pages\n        </a>\n      </Text>\n    </Box>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Grommet} from 'grommet';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Grommet>\n      <App />\n    </Grommet>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}